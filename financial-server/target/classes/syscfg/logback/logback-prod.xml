<?xml version="1.0" encoding="UTF-8"?>
<configuration>
	<include resource="org/springframework/boot/logging/logback/base.xml"/>

    <!-- 引用spring配置文件的属性值 -->
    <springProperty scope="context" name="springAppName" source="spring.application.name"/>
    <springProperty scope="context" name="ip" source="spring.cloud.client.ip-address" />
    <!--定义日志文件的存储地址勿在 LogBack 的配置中使用相对路径-->
    <property name="LOG_HOME" value="/app/logs/report-server/"/>
	<property name="LOG_PATTERN"     value="%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr([${springAppName:-},%X{X-B3-TraceId:-},%X{X-B3-SpanId:-},%X{X-Span-Export:-}]){yellow} %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr([%M][%L]){blue} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}"/>

    <!-- 控制台输出 -->
<!--         <layout class="ch.qos.logback.classic.PatternLayout"> -->
	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <Pattern>
            	${LOG_PATTERN}   
            </Pattern>
        </encoder>
    </appender>
    
    <!--文件-->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_HOME}/info.log</file>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <Pattern>
               ${LOG_PATTERN}
            </Pattern>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_HOME}/info.%d{yyyy-MM-dd}.%i.log
            </fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy
                    class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>500MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
    </appender>
    
    <appender name="FILE-ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
    	<!-- 当前文件输出文件夹,如果大小达到最大值,则会移到日志文件夹里面 -->
    	<file>${LOG_HOME}/error.log</file>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">  
            <level>ERROR</level>  
            <onMatch>ACCEPT</onMatch>  
            <onMismatch>DENY</onMismatch>  
        </filter>  
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <Pattern>
                ${LOG_PATTERN}
            </Pattern>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
        	<!-- 移动到历史文件夹目录 -->
            <fileNamePattern>${LOG_HOME}/error.%d{yyyy-MM-dd}.%i.log
            </fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy
                    class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>500MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
    </appender>

    <!-- 输出elk json 读取日志文件  -->
	<appender name="logstash" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${LOG_HOME}/elk/all-elk.json</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_HOME}/elk/all-elk-%d{yyyy-MM-dd}.json</fileNamePattern>
            <maxHistory>30</maxHistory><!-- 90天 -->
        </rollingPolicy>
		<encoder charset="UTF-8" class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
		    <providers>
		        <timestamp>
		            <timeZone>GMT+8</timeZone>
		        </timestamp>
		        <pattern>
		            <pattern>
		                {
						"ip": "${ip}",
		                "app": "${springAppName:-}",
		                "level": "%level",
		                "thread": "%thread",
		                "pid": "${PID:-}",
		                "trace": "%X{X-B3-TraceId:-}",
		                "span": "%X{X-B3-SpanId:-}",
		                "exportable": "%X{X-Span-Export:-}",
		                "class": "%logger{40}",
		                "method": "%M",
		                "rest": "%message",
		                "stacktrace": "%exception{20}"
		                }
		            </pattern>
		        </pattern>
		    </providers>
		</encoder>
	</appender>

	<!--过滤掉spring和hibernate的一些无用的debug信息-->
	<logger name="org.elasticsearch" level="INFO" />
	<logger name="org.apache.http" level="WARN" />
	<!-- Spring -->
	<logger name="org.springframework" level="ERROR" />
	<!-- mybatis loggers -->
	<logger name="org.mybatis" level="INFO" />
	<logger name="com.ibatis" level="INFO" />
	<logger name="com.ibatis.common.jdbc.SimpleDataSource" level="INFO" />
	<logger name="com.ibatis.common.jdbc.ScriptRunner" level="INFO" />
	<logger name="com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate" level="INFO" />
	<!-- sql loggers -->
	<logger name="java.sql.Connection" level="INFO"/>
	<logger name="java.sql.Statement" level="INFO"/>
	<logger name="java.sql.PreparedStatement" level="INFO"/>
	<logger name="java.sql.ResultSet" level="INFO"/>
    <logger name="org.apache.ibatis.session.defaults" level="WARN" />
	
	<!-- 我方自己的日志 -->
	<logger name="com.caih.cloudec" level="INFO" />

    <root level="info">
        <appender-ref ref="FILE-ERROR" /> 
        <appender-ref ref="FILE" />
        <appender-ref ref="logstash" />
    </root>

</configuration>